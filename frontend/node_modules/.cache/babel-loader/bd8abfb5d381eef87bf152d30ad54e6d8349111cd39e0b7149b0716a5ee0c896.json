{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token && token !== 'null' && token !== 'undefined') {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle response errors and token cleanup\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  // If token is invalid or expired, clear it and redirect to login\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    const errorData = error.response.data;\n\n    // If backend signals to clear token\n    if (errorData !== null && errorData !== void 0 && errorData.clearToken) {\n      localStorage.removeItem('token');\n      // Reload page to trigger login screen\n      window.location.reload();\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: async credentials => {\n    try {\n      var _response$data;\n      const response = await api.post('/auth/login', credentials);\n\n      // Validate token before storing\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      // Clear any existing corrupted token\n      localStorage.removeItem('token');\n      throw error;\n    }\n  },\n  register: async userData => {\n    try {\n      var _response$data2;\n      const response = await api.post('/auth/register', userData);\n\n      // Validate token before storing\n      if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      // Clear any existing corrupted token\n      localStorage.removeItem('token');\n      throw error;\n    }\n  },\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n  updateSkills: async skills => {\n    const response = await api.put('/auth/skills', {\n      skills\n    });\n    return response.data;\n  }\n};\n\n// Enhanced Library API calls with real-time support\nexport const libraryAPI = {\n  getLibraries: async () => {\n    const response = await api.get('/library');\n    return response.data;\n  },\n  getLibraryStatus: async libraryId => {\n    const response = await api.get(`/library/${libraryId}/status`);\n    return response.data;\n  },\n  bookSeat: async (libraryId, seatNumber) => {\n    const response = await api.post('/library/book', {\n      libraryId,\n      seatNumber\n    });\n    return response.data;\n  },\n  leaveSeat: async bookingId => {\n    const response = await api.delete(`/library/leave/${bookingId}`);\n    return response.data;\n  },\n  getBookings: async () => {\n    const response = await api.get('/library/bookings');\n    return response.data;\n  }\n};\n\n// Event API calls\nexport const eventAPI = {\n  getEvents: async () => {\n    const response = await api.get('/events');\n    return response.data;\n  },\n  bookSeat: async (eventId, seatId) => {\n    const response = await api.post('/events/book', {\n      eventId,\n      seatId\n    });\n    return response.data;\n  }\n};\n\n// Skill API calls\nexport const skillAPI = {\n  searchUsers: async skill => {\n    const response = await api.get(`/skills/search?skill=${encodeURIComponent(skill)}`);\n    return response.data;\n  },\n  getAllUsers: async () => {\n    const response = await api.get('/skills/users');\n    return response.data;\n  }\n};\n\n// Health check API\nexport const healthAPI = {\n  checkStatus: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","errorData","data","clearToken","removeItem","window","location","reload","authAPI","login","credentials","_response$data","post","setItem","register","userData","_response$data2","getProfile","get","updateSkills","skills","put","libraryAPI","getLibraries","getLibraryStatus","libraryId","bookSeat","seatNumber","leaveSeat","bookingId","delete","getBookings","eventAPI","getEvents","eventId","seatId","skillAPI","searchUsers","skill","encodeURIComponent","getAllUsers","healthAPI","checkStatus"],"sources":["C:/Users/LENOVO/OneDrive/Desktop/Projects_web/campus-connect/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 10000,\r\n});\r\n\r\n// Add auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token && token !== 'null' && token !== 'undefined') {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Handle response errors and token cleanup\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // If token is invalid or expired, clear it and redirect to login\r\n    if (error.response?.status === 401) {\r\n      const errorData = error.response.data;\r\n      \r\n      // If backend signals to clear token\r\n      if (errorData?.clearToken) {\r\n        localStorage.removeItem('token');\r\n        // Reload page to trigger login screen\r\n        window.location.reload();\r\n      }\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const authAPI = {\r\n  login: async (credentials) => {\r\n    try {\r\n      const response = await api.post('/auth/login', credentials);\r\n      \r\n      // Validate token before storing\r\n      if (response.data?.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      // Clear any existing corrupted token\r\n      localStorage.removeItem('token');\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  register: async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      \r\n      // Validate token before storing\r\n      if (response.data?.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      // Clear any existing corrupted token\r\n      localStorage.removeItem('token');\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getProfile: async () => {\r\n    const response = await api.get('/auth/profile');\r\n    return response.data;\r\n  },\r\n  \r\n  updateSkills: async (skills) => {\r\n    const response = await api.put('/auth/skills', { skills });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Enhanced Library API calls with real-time support\r\nexport const libraryAPI = {\r\n  getLibraries: async () => {\r\n    const response = await api.get('/library');\r\n    return response.data;\r\n  },\r\n  \r\n  getLibraryStatus: async (libraryId) => {\r\n    const response = await api.get(`/library/${libraryId}/status`);\r\n    return response.data;\r\n  },\r\n  \r\n  bookSeat: async (libraryId, seatNumber) => {\r\n    const response = await api.post('/library/book', { libraryId, seatNumber });\r\n    return response.data;\r\n  },\r\n  \r\n  leaveSeat: async (bookingId) => {\r\n    const response = await api.delete(`/library/leave/${bookingId}`);\r\n    return response.data;\r\n  },\r\n  \r\n  getBookings: async () => {\r\n    const response = await api.get('/library/bookings');\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Event API calls\r\nexport const eventAPI = {\r\n  getEvents: async () => {\r\n    const response = await api.get('/events');\r\n    return response.data;\r\n  },\r\n  \r\n  bookSeat: async (eventId, seatId) => {\r\n    const response = await api.post('/events/book', { eventId, seatId });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Skill API calls\r\nexport const skillAPI = {\r\n  searchUsers: async (skill) => {\r\n    const response = await api.get(`/skills/search?skill=${encodeURIComponent(skill)}`);\r\n    return response.data;\r\n  },\r\n  \r\n  getAllUsers: async () => {\r\n    const response = await api.get('/skills/users');\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Health check API\r\nexport const healthAPI = {\r\n  checkStatus: async () => {\r\n    const response = await api.get('/health');\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}